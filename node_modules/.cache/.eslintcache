[{"D:\\ionic uas\\Pencari_Mutual_APP\\src\\index.tsx":"1","D:\\ionic uas\\Pencari_Mutual_APP\\src\\reportWebVitals.ts":"2","D:\\ionic uas\\Pencari_Mutual_APP\\src\\serviceWorkerRegistration.ts":"3","D:\\ionic uas\\Pencari_Mutual_APP\\src\\App.tsx":"4","D:\\ionic uas\\Pencari_Mutual_APP\\src\\store\\index.tsx":"5","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Register\\Register.tsx":"6","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Profile\\Profile.tsx":"7","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Login\\Login.tsx":"8","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\UpdateProfile\\UpdateProfile.tsx":"9","D:\\ionic uas\\Pencari_Mutual_APP\\src\\store\\action.tsx":"10"},{"size":1038,"mtime":1638024715584,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1638024715590,"results":"13","hashOfConfig":"12"},{"size":5398,"mtime":1638024715591,"results":"14","hashOfConfig":"12"},{"size":1797,"mtime":1638069155107,"results":"15","hashOfConfig":"12"},{"size":423,"mtime":1638024715592,"results":"16","hashOfConfig":"12"},{"size":5791,"mtime":1638024715588,"results":"17","hashOfConfig":"12"},{"size":1497,"mtime":1638024715587,"results":"18","hashOfConfig":"12"},{"size":4491,"mtime":1638024715586,"results":"19","hashOfConfig":"12"},{"size":2865,"mtime":1638024715589,"results":"20","hashOfConfig":"12"},{"size":104,"mtime":1638024715592,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lmaswt",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\ionic uas\\Pencari_Mutual_APP\\src\\index.tsx",[],["47","48"],"D:\\ionic uas\\Pencari_Mutual_APP\\src\\reportWebVitals.ts",[],"D:\\ionic uas\\Pencari_Mutual_APP\\src\\serviceWorkerRegistration.ts",[],"D:\\ionic uas\\Pencari_Mutual_APP\\src\\App.tsx",[],"D:\\ionic uas\\Pencari_Mutual_APP\\src\\store\\index.tsx",[],"D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Register\\Register.tsx",["49","50","51"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport \"./Register.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setUser } from \"../../store/action\";\r\nimport swal from \"sweetalert2\";\r\nconst profilePic = \"https://image.flaticon.com/icons/png/512/1177/1177568.png\";\r\nconst bcrypt = require(\"bcryptjs\");\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyBOkpGmYEhzvH2WEVtc0ZN5A15iTDSjPMg\",\r\n    authDomain: \"pencari-mutual.firebaseapp.com\",\r\n    projectId: \"pencari-mutual\",\r\n    storageBucket: \"pencari-mutual.appspot.com\",\r\n    messagingSenderId: \"143095555281\",\r\n    appId: \"1:143095555281:web:6104f111e09270ea53d1f0\",\r\n    measurementId: \"G-CF723V5FEL\"\r\n  });\r\n} else {\r\n  firebase.app(); // kalau udah ada, pakai yang ini\r\n}\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nconst Register: React.FC = () => {\r\n  let [email, setEmail] = useState();\r\n  let [password, setPassword] = useState();\r\n  const [repeatPassword, setRepeatPassword] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  async function signUp() {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!email) {\r\n      swal.fire(`email cannot empty`);\r\n    } else if (!re.test(String(email).toLowerCase())) {\r\n      swal.fire(`invalid email format`);\r\n    } else if (!password) {\r\n      swal.fire(`password required`);\r\n    } else if (password !== repeatPassword) {\r\n      swal.fire(`repeat password not same`);\r\n    } else {\r\n      const userRef = firestore.collection(\"users\").doc(email);\r\n      const doc = await userRef.get();\r\n      if (doc.exists) {\r\n        swal.fire(`Email already registered`);\r\n      } else {\r\n        const userRef = firestore.collection(\"users\");\r\n        password = bcrypt.hashSync(password, 10);\r\n        userRef.doc(email).set({ email, password, profilePic });\r\n        swal.fire(`Congratulation!`, `Sign up succeed`, `success`);\r\n        history.push(\"/login\");\r\n      }\r\n    }\r\n    (document.getElementById(\"input-email\") as HTMLInputElement).value = \"\";\r\n    (document.getElementById(\"input-password\") as HTMLInputElement).value = \"\";\r\n    (\r\n      document.getElementById(\"input-repeat-password\") as HTMLInputElement\r\n    ).value = \"\";\r\n  }\r\n\r\n  function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider).then((data) => {\r\n      if (data.additionalUserInfo?.isNewUser) {\r\n        const userRef = firestore.collection(\"users\");\r\n        const password = bcrypt.hashSync(data.user?.uid, 10);\r\n        const email = data.user?.email || undefined;\r\n        userRef.doc(email).set({\r\n          email,\r\n          password,\r\n          profilePic: data.user?.photoURL,\r\n          name: data.user?.displayName,\r\n        });\r\n        dispatch(\r\n          setUser({\r\n            name: data.user?.displayName,\r\n            email: data.user?.email,\r\n            profilePic: data.user?.photoURL,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n      } else {\r\n        const email = data.user?.email || undefined;\r\n        const userRef = firestore.collection(\"users\");\r\n        const doc = userRef.doc(email).get();\r\n        const user = doc.then((data) => {\r\n          dispatch(setUser(data.data()));\r\n          history.push(\"/\");\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <section className=\"register-section\">\r\n          <IonItem class=\"content\" lines=\"full\">\r\n            <IonTitle class=\"title\">Create Account,</IonTitle>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonLabel class=\"sub-title\"> Sign up to get started!</IonLabel>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              onIonInput={(e: any) => setEmail(e.target.value)}\r\n              id=\"input-email\"\r\n              type=\"email\"\r\n              placeholder=\"Input email address\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              onIonInput={(e: any) => setPassword(e.target.value)}\r\n              id=\"input-password\"\r\n              type=\"password\"\r\n              placeholder=\"Input password\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              onIonInput={(e: any) => setRepeatPassword(e.target.value)}\r\n              id=\"input-repeat-password\"\r\n              type=\"password\"\r\n              placeholder=\"Repeat password\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton\r\n              className=\"button-register\"\r\n              onClick={signUp}\r\n              class=\"button\"\r\n            >\r\n              Sign Up\r\n            </IonButton>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton\r\n              className=\"button-register\"\r\n              color=\"tertiary\"\r\n              onClick={signInWithGoogle}\r\n            >\r\n              Connect With Google\r\n            </IonButton>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonLabel class=\"to-login\">\r\n              Already have account? <a href=\"/login\">Login Here</a>\r\n            </IonLabel>\r\n          </IonItem>\r\n        </section>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Profile\\Profile.tsx",["52","53","54"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonImg,\r\n  IonLabel,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUser } from \"../../store/action\";\r\nimport \"./Profile.css\";\r\nimport firebase from \"firebase/app\";\r\nimport { RootState } from \"../../store\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile: React.FC = () => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  function logout() {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {})\r\n      .catch((err) => console.log(err));\r\n    dispatch(setUser(\"\"));\r\n  }\r\n\r\n  function update() {\r\n    history.push(\"/update\");\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <section className=\"profile-section\">\r\n          <IonImg src={user.profilePic}></IonImg>\r\n          <IonLabel class=\"label\">Name: {user.name}</IonLabel> <br />\r\n          <IonLabel class=\"label\">Email: {user.email}</IonLabel> <br />\r\n          <IonLabel class=\"label\">Birthdate: {user.birthdate}</IonLabel>\r\n          <IonButton color=\"tertiary\" id=\"logout-button\" onClick={update}>\r\n            Update Profile\r\n          </IonButton>\r\n          <IonButton color=\"danger\" id=\"logout-button\" onClick={logout}>\r\n            Logout\r\n          </IonButton>\r\n        </section>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\Login\\Login.tsx",["55","56","57","58","59","60"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRouterLink,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport \"./Login.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, } from \"react-router\";\r\nimport { setUser } from \"../../store/action\";\r\nimport swal from \"sweetalert2\";\r\nconst bcrypt = require(\"bcryptjs\");\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  async function login() {\r\n    const userRef = firestore.collection(\"users\").doc(email);\r\n    const doc = await userRef.get();\r\n    if (!doc.exists) {\r\n      swal.fire(`Invalid email/password`);\r\n    } else {\r\n      const data = doc.data();\r\n      if (data) {\r\n        if (bcrypt.compareSync(password, data.password)) {\r\n          dispatch(\r\n            setUser({\r\n              email: data.email,\r\n              name: data.name,\r\n              birthdate: data.birthdate,\r\n              profilePic: data.profilePic,\r\n            })\r\n          );\r\n          history.push(\"/\");\r\n        } else {\r\n          swal.fire(`Invalid email/password`);\r\n        }\r\n      }\r\n    }\r\n    (document.getElementById(\"input-email\") as HTMLInputElement).value = \"\";\r\n    (document.getElementById(\"input-password\") as HTMLInputElement).value = \"\";\r\n  }\r\n\r\n  function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider).then((data) => {\r\n      if (data.additionalUserInfo?.isNewUser) {\r\n        const userRef = firestore.collection(\"users\");\r\n        const password = bcrypt.hashSync(data.user?.uid, 10);\r\n        const email = data.user?.email || undefined;\r\n        userRef.doc(email).set({\r\n          email,\r\n          password,\r\n          profilePic: data.user?.photoURL,\r\n          name: data.user?.displayName,\r\n        });\r\n        dispatch(\r\n          setUser({\r\n            name: data.user?.displayName,\r\n            email: data.user?.email,\r\n            profilePic: data.user?.photoURL,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n      } else {\r\n        const email = data.user?.email || undefined;\r\n        const userRef = firestore.collection(\"users\");\r\n        const doc = userRef.doc(email).get();\r\n        const user = doc.then((data) => {\r\n          dispatch(setUser(data.data()));\r\n          history.push(\"/\");\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <section className=\"login-section\">\r\n          <IonItem lines=\"full\">\r\n            <IonTitle class=\"title\">Pencari Mutual</IonTitle>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonLabel class=\"sub-title\"> Sign in to continue!</IonLabel>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              onIonInput={(e: any) => setEmail(e.target.value)}\r\n              id=\"login-email\"\r\n              type=\"email\"\r\n              placeholder=\"Input email address\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              onIonInput={(e: any) => setPassword(e.target.value)}\r\n              id=\"login-password\"\r\n              type=\"password\"\r\n              placeholder=\"Input password\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton className=\"button\" onClick={login} class=\"button\">\r\n              Login\r\n            </IonButton>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton\r\n              className=\"button\"\r\n              color=\"tertiary\"\r\n              onClick={signInWithGoogle}\r\n            >\r\n              Connect With Google\r\n            </IonButton>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonLabel class=\"to-register\">\r\n              Don't have an account? <a href=\"/register\">Register Here</a>\r\n            </IonLabel>\r\n          </IonItem>\r\n        </section>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\ionic uas\\Pencari_Mutual_APP\\src\\pages\\UpdateProfile\\UpdateProfile.tsx",["61","62","63","64","65","66","67","68"],"import {\r\n  IonButton,\r\n  IonContent,\r\n  IonHeader,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRouterLink,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport \"./UpdateProfile.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setUser } from \"../../store/action\";\r\nimport swal from \"sweetalert2\";\r\nimport { RootState } from \"../../store\";\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nconst UpdateProfile: React.FC = () => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const [name, setName] = useState(user.name);\r\n  const [birthdate, setBirthdate] = useState(user.birthdate);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  async function update() {\r\n    if (user) {\r\n      const userRef = firestore.collection(\"users\").doc(user.email);\r\n      const doc = await userRef.get();\r\n      const data = doc.data();\r\n      if (data) {\r\n        data.name = name;\r\n        data.birthdate = birthdate;\r\n        userRef.set(data);\r\n        dispatch(setUser(data));\r\n        swal.fire(`Congratulation!`, `Update succeed`, `success`);\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function back() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonContent>\r\n        <section className=\"update-section\">\r\n          <IonItem lines=\"none\">\r\n            <IonTitle class=\"title-update\">Update Profile</IonTitle>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              value={user.name}\r\n              onIonInput={(e: any) => setName(e.target.value)}\r\n              id=\"update-name\"\r\n              type=\"email\"\r\n              placeholder=\"Update your name\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonInput\r\n              value={user.birthdate}\r\n              onIonInput={(e: any) => setBirthdate(e.target.value)}\r\n              id=\"update-birthdate\"\r\n              type=\"date\"\r\n              placeholder=\"Update your birthdate\"\r\n            ></IonInput>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton onClick={update} class=\"button\">\r\n              Save The Update\r\n            </IonButton>\r\n          </IonItem>\r\n          <IonItem lines=\"none\">\r\n            <IonButton color=\"danger\" onClick={back} class=\"button\">\r\n              Back To Profile\r\n            </IonButton>\r\n          </IonItem>\r\n        </section>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","D:\\ionic uas\\Pencari_Mutual_APP\\src\\store\\action.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":13},{"ruleId":"73","severity":1,"message":"78","line":106,"column":15,"nodeType":"75","messageId":"76","endLine":106,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"79","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":11},{"ruleId":"73","severity":1,"message":"77","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"80","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":13},{"ruleId":"73","severity":1,"message":"81","line":18,"column":10,"nodeType":"75","messageId":"76","endLine":18,"endColumn":22},{"ruleId":"73","severity":1,"message":"82","line":19,"column":10,"nodeType":"75","messageId":"76","endLine":19,"endColumn":27},{"ruleId":"73","severity":1,"message":"78","line":88,"column":15,"nodeType":"75","messageId":"76","endLine":88,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"83","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":11},{"ruleId":"73","severity":1,"message":"80","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":13},{"ruleId":"73","severity":1,"message":"81","line":18,"column":10,"nodeType":"75","messageId":"76","endLine":18,"endColumn":22},{"ruleId":"73","severity":1,"message":"82","line":19,"column":10,"nodeType":"75","messageId":"76","endLine":19,"endColumn":27},{"ruleId":"73","severity":1,"message":"84","line":20,"column":20,"nodeType":"75","messageId":"76","endLine":20,"endColumn":26},{"ruleId":"73","severity":1,"message":"85","line":27,"column":7,"nodeType":"75","messageId":"76","endLine":27,"endColumn":11},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'IonHeader' is defined but never used.","Identifier","unusedVar","'IonToolbar' is defined but never used.","'user' is assigned a value but never used.","'IonTitle' is defined but never used.","'IonRouterLink' is defined but never used.","'useAuthState' is defined but never used.","'useCollectionData' is defined but never used.","'IonLabel' is defined but never used.","'useRef' is defined but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]